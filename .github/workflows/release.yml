name: build-release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 12.16.1
      # - name: Set env vars on ubuntu-18.04
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macOS')
      #   run: |
      #      echo "TAG=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: Set env vars on Windows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(matrix.os, 'windows')
        run: |
          chcp 65001 #set code page to utf-8
          echo ("TAG=" + (node -p "require('./package.json').version")) >> $env:GITHUB_ENV
      - name: yarn install
        run: yarn install
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn run electron:build -p always
      # - name: Upload Linux artifacts
      #   uses: actions/upload-artifact@v1
      #   if: startsWith(matrix.os, 'ubuntu')
      #   with:
      #     name: linux
      #     path: dist_electron/vue-electron-playground-${{ env.TAG }}.AppImage
      - name: Upload Win artifacts
        uses: actions/upload-artifact@v1
        if: startsWith(matrix.os, 'windows')
        with:
          name: win
          path: dist_electron/vue-electron-playground Setup ${{ env.TAG }}.exe
      # - name: Upload Mac artifacts (dmg)
      #   uses: actions/upload-artifact@v1
      #   if: startsWith(matrix.os, 'macOS')
      #   with:
      #     name: mac-dmg
      #     path: dist_electron/vue-electron-playground-${{ env.TAG }}.dmg